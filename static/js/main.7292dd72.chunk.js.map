{"version":3,"sources":["i18n.ts","components/footer/footer.tsx","assets/wolves_sft_logo.svg","stores/constants.jsx","config/addresses.ts","stores/store.tsx","components/header/header.tsx","components/mint/mint.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resources","en","translation","zh","i18n","use","detector","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","Footer","className","Component","CONNECTION_CHANGED","TX_HASH","ERC20_TOKEN_CONTRACT","PRESALE_BUY","PRESALE_CLAIM","PRESALE_STATE","addresses","token","presale","emitter","Emitter","EventEmitter","dispatcher","Dispatcher","Store","web3Modal","ethersProvider","eventProvider","tokenContract","presaleContract","presaleContractRO","mintContract","mintContractRO","networkName","chainId","address","assets","getAssets","connect","a","disconnect","web3Provider","subscribeProvider","ethers","providers","Web3Provider","listAccounts","accounts","getNetwork","network","name","_launchEventProvider","_setupContracts","_emitNetworkChange","console","log","autoconnect","query","URLSearchParams","window","location","search","defaultNetwork","get","cachedProvider","provider","on","networkId","clearCache","localStorage","removeItem","removeAllListeners","clearCachedProvider","close","_websocket","onclose","destroy","isConnected","isEventConnected","InfuraProvider","getWebSocketProvider","process","REACT_APP_INFURA_ID","_setupEventContracts","onerror","emit","type","_setupEvents","_getPresaleState","payloadContent","getStates","nullAddress","states","hasClosed","timeNow","gt","timeClose","isOpen","gte","timeOpen","state","ethRaised","fromWei","timeToNextEvent","sub","toNumber","ethUser","userEthAmount","ethInvested","userEthInvested","tokenUser","userTokenAmount","tokenLocked","userTokenLocked","error","message","_getTokenContractData","async","parallel","callbackInner","_getTokenAmount","err","data","toString","asset","tokenAmount","numberArray","_doPresale","amount","investAmount","value","toWei","buyTokens","tx","hash","wait","_doPresaleClaim","claimTokens","callback","result","BigNumber","from","this","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","register","payload","_payload","content","filter","filters","TokensPurchased","event","undefined","TokensClaimed","chainAddresses","_getChainAddresses","Contract","CrowdsaleAbi","signer","getSigner","TokenAbi","n","decimals","parseFloat","utils","formatUnits","parsed","toFixed","parseUnits","StoreClasses","store","StoreContainer","props","children","React","Header","handleSubmit","bind","onConnectionChanged","off","params","setState","preventDefault","substring","length","shortAddress","_shortAddress","Navbar","bg","variant","expand","Toggle","aria-controls","Brand","href","Image","src","logo","width","Collapse","id","Form","onSubmit","inline","section","INITIALSTATE","connected","waiting","inputValid","INITIALCONNSTATE","FAILURESTATE","Mint","textRef","createRef","clockRef","inputRef","buttonRef","timeoutHandle","tickerHandle","handleOnBlur","handleOnFocus","handleOnChange","handleClaim","onMintState","onMintBuy","onTimeout","handleTickEvent","onButtonRefChanged","dispatch","addEventListener","removeEventListener","clearInterval","_manageTimers","tickerEnd","secondsLeft","Date","now","msecInMinute","msecInHour","msecInDay","Math","floor","padStart","dispatchEvent","CustomEvent","detail","time","current","defaultEthValue","replace","target","indexOf","trim","innerHTML","text","style","color","clearTimeout","setTimeout","t","setInterval","onTicker","_getMintContractAddress","ref","forceUpdate","disabled","withTranslation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7292dd72.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEN from './locales/en_US/translation.json';\nimport translationZH from './locales/zh_CN/translation.json';\n\n// the translations\nconst resources = {\n  en: {\n    translation: translationEN,\n  },\n  zh: {\n    translation: translationZH,\n  },\n};\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en',\n    fallbackLng: 'en',\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See the file LICENSES/README.md for more information.\n */\nimport './footer.css';\n\nimport React, { Component, ReactNode } from 'react';\n\nclass Footer extends Component<unknown> {\n  render(): ReactNode {\n    return (\n      <div className=\"footer-main\">\n        <p className=\"footer-notes tk-vincente-bold\">\n          AS A USER OF THE WOLVES PLATFORM & WOLF TOKEN YOU BY DEFAULT ARE IN\n          AGREEMENT THAT YOU DO SO AT YOUR OWN RISK.\n          <br />\n          ALL LIABILITY RESIDES WITH THE USER. RISK ONLY WHAT YOU ARE WILLING TO\n          LOSE.\n          <br />\n          COPYRIGHT ALL RIGHTS RESERVED WOLVES OF WALL STREET 2021\n        </p>\n      </div>\n    );\n  }\n}\n\nexport { Footer };\n","export default __webpack_public_path__ + \"static/media/wolves_sft_logo.1bd16c76.svg\";","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See the file LICENSES/README.md for more information.\n */\n\n// Events (used in dispatcher and emitter)\nexport const CONNECTION_CHANGED = 'CONNECTION_CHANGED';\nexport const TX_HASH = 'TX_HASH';\n\nexport const ERC20_TOKEN_CONTRACT = 'ERC20_TOKEN_CONTRACT'; // information from token contract\n\nexport const PRESALE_BUY = 'PRESALE_BUY'; //call for presale\nexport const PRESALE_CLAIM = 'PRESALE_CLAIM'; //call for claim presaled tokens\nexport const PRESALE_STATE = 'PRESALE_STATE'; //request / receive presale information\n","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See the file LICENSES/README.md for more information.\n */\n\nconst addresses = {\n  1: {\n    //mainet\n    token: '0x0000000000000000000000000000000000000000',\n    presale: '0x0000000000000000000000000000000000000000',\n  },\n  4: {\n    //rinkeby\n    token: '0x48469348d0C04e9426755edd3263C3F8E6841f0D',\n    presale: '0x34913A1307c2893Eaeb369B21e6c93041a52431a',\n  },\n};\n\nexport { addresses };\n","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See the file LICENSES/README.md for more information.\n */\n\nimport WalletConnectProvider from '@walletconnect/web3-provider';\nimport CrowdsaleAbi from 'abi/contracts/src/crowdsale/Crowdsale.sol/Crowdsale.json';\nimport TokenAbi from 'abi/contracts/src/token/Token.sol/WolfToken.json';\nimport async from 'async';\nimport { ethers } from 'ethers';\nimport Emitter from 'events';\nimport Dispatcher from 'flux';\nimport React from 'react';\nimport Web3Modal from 'web3modal';\n\nimport { addresses } from '../config/addresses';\nimport {\n  CONNECTION_CHANGED,\n  ERC20_TOKEN_CONTRACT,\n  PRESALE_BUY,\n  PRESALE_CLAIM,\n  PRESALE_STATE,\n  TX_HASH,\n} from './constants';\n\nconst emitter = new Emitter.EventEmitter();\nconst dispatcher = new Dispatcher.Dispatcher();\n\ntype PayloadContent = {\n  amount: number | undefined;\n  filter: Array<string> | undefined;\n};\n\ntype Payload = {\n  type: string;\n  content: PayloadContent;\n};\n\ntype ChainAddresses = {\n  token: string;\n  presale: string;\n};\n\nexport type TokenContractResult = {\n  tokenAmount: number | undefined;\n};\n\nexport type ConnectResult = {\n  type: 'event' | 'prod';\n  address: string;\n  networkName: string;\n};\n\nexport type PresaleResult = {\n  error: string | undefined;\n  state: {\n    ethRaised: number;\n    hasClosed: boolean;\n    isOpen: boolean;\n    timeToNextEvent: number;\n    ethUser: number;\n    ethInvested: number;\n    tokenUser: number;\n    tokenLocked: number;\n  };\n};\n\nexport type StatusResult = {\n  error: string | undefined;\n};\n\nexport type MintResult = {\n  error: string | undefined;\n  state: {\n    ethRaised: number;\n    hasClosed: boolean;\n    isOpen: boolean;\n    timeToNextEvent: number;\n    ethUser: number;\n    tokenUser: number;\n  };\n};\n\ntype cbf = async.AsyncResultCallback<unknown, Error>;\n\nclass Store {\n  web3Modal: Web3Modal;\n  ethersProvider: ethers.providers.Web3Provider | null = null;\n  eventProvider: ethers.providers.InfuraWebSocketProvider | null = null;\n  tokenContract: ethers.Contract | null = null;\n  presaleContract: ethers.Contract | null = null;\n  presaleContractRO: ethers.Contract | null = null;\n  mintContract: ethers.Contract | null = null;\n  mintContractRO: ethers.Contract | null = null;\n  networkName = 'rinkeby';\n  chainId = 0;\n  address = '';\n  assets = {};\n\n  static nullAddress = '0x0000000000000000000000000000000000000000';\n\n  constructor() {\n    this.web3Modal = new Web3Modal({\n      network: this.networkName,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId: process.env.REACT_APP_INFURA_ID,\n          },\n        },\n      },\n    });\n\n    dispatcher.register((payload) => {\n      const _payload = payload as Payload;\n      switch (_payload.type) {\n        case ERC20_TOKEN_CONTRACT:\n          this._getTokenContractData(_payload.content);\n          break;\n        case PRESALE_BUY:\n          this._doPresale(_payload.content);\n          break;\n        case PRESALE_CLAIM:\n          this._doPresaleClaim(_payload.content);\n          break;\n        case PRESALE_STATE:\n          this._getPresaleState(_payload.content);\n          break;\n        default: {\n          return;\n        }\n      }\n    });\n  }\n\n  getAssets = () => {\n    return this.assets;\n  };\n\n  /*********************** NETWORK ******************/\n\n  connect = async () => {\n    try {\n      if (this.ethersProvider !== null) {\n        await this.disconnect(false);\n      }\n      const web3Provider = await this.web3Modal.connect();\n      await this.subscribeProvider(web3Provider);\n\n      const ethersProvider = new ethers.providers.Web3Provider(web3Provider);\n      const accounts = await ethersProvider.listAccounts();\n      this.address = accounts[0];\n      const network = await ethersProvider.getNetwork();\n      this.chainId = network.chainId;\n      this.networkName = network.name;\n      await this._launchEventProvider();\n      if (this._setupContracts(ethersProvider)) this._emitNetworkChange();\n      this.ethersProvider = ethersProvider;\n    } catch (e) {\n      console.log(e);\n      await this.disconnect(true);\n    }\n  };\n\n  autoconnect = async () => {\n    const query = new URLSearchParams(window.location.search);\n    const defaultNetwork = query.get('network');\n\n    if (defaultNetwork) this.networkName = defaultNetwork;\n\n    if (this.web3Modal.cachedProvider) {\n      await this.connect();\n    } else await this._launchEventProvider();\n  };\n\n  subscribeProvider = async (provider: ethers.providers.Provider) => {\n    if (!provider.on) {\n      return;\n    }\n\n    provider.on('close', () => {\n      this.disconnect(true);\n    });\n\n    provider.on('disconnect', () => {\n      this.disconnect(true);\n    });\n\n    provider.on('accountsChanged', async (accounts: string[]) => {\n      if (accounts[0] !== this.address) {\n        this.address = accounts[0];\n        this._emitNetworkChange();\n      }\n    });\n\n    provider.on('chainChanged', async (chainId: number) => {\n      if (chainId !== this.chainId) {\n        await this.connect();\n      }\n    });\n\n    provider.on('networkChanged', async (networkId: number) => {\n      if (this.ethersProvider !== null) {\n        const network = await this.ethersProvider.getNetwork();\n        if (network.chainId !== this.chainId) {\n          await this.connect();\n          this._emitNetworkChange();\n        }\n      }\n    });\n  };\n\n  disconnect = async (clearCache: boolean) => {\n    if (this.ethersProvider) {\n      localStorage.removeItem('walletconnect');\n      this.ethersProvider.removeAllListeners();\n      this.ethersProvider = null;\n    }\n    this.address = '';\n    if (clearCache) {\n      this.web3Modal.clearCachedProvider();\n    }\n    this._emitNetworkChange();\n  };\n\n  close = async () => {\n    this.presaleContractRO = null;\n    await this.disconnect(false);\n    if (this.eventProvider) {\n      this.eventProvider?.removeAllListeners();\n      this.eventProvider._websocket.onclose = null;\n      await this.eventProvider?.destroy();\n      this.eventProvider = null;\n    }\n  };\n\n  isConnected = () => {\n    return this.ethersProvider !== null;\n  };\n\n  isEventConnected = () => {\n    return this.eventProvider !== null;\n  };\n\n  _setupEvents(): boolean {\n    this.eventProvider?.removeAllListeners();\n    // Listen to all presale TokensPurchased events\n    if (this.presaleContractRO) {\n      let filter = this.presaleContractRO.filters.TokensPurchased(\n        null,\n        null,\n        null,\n        null\n      );\n      this.eventProvider?.on(filter, (log, event) => {\n        this._getPresaleState(undefined);\n      });\n      if (this.address !== '') {\n        filter = this.presaleContractRO.filters.TokensClaimed(\n          this.address,\n          null\n        );\n        this.eventProvider?.on(filter, (log, event) => {\n          this._getPresaleState(undefined);\n        });\n      }\n    }\n    return true;\n  }\n\n  _emitNetworkChange() {\n    emitter.emit(CONNECTION_CHANGED, {\n      type: 'prod',\n      address: this.address,\n      networkName: this.networkName,\n    } as ConnectResult);\n  }\n\n  _launchEventProvider = async () => {\n    try {\n      if (\n        !this.eventProvider ||\n        (await this.eventProvider?.getNetwork()).chainId !== this.chainId\n      ) {\n        const eventProvider = ethers.providers.InfuraProvider.getWebSocketProvider(\n          this.networkName,\n          process.env.REACT_APP_INFURA_ID\n        );\n        if (!this.chainId)\n          this.chainId = (await eventProvider.getNetwork()).chainId;\n\n        this._setupEventContracts(eventProvider);\n        eventProvider._websocket.onclose = () => {\n          this.close();\n        };\n        eventProvider._websocket.onerror = () => {\n          this.close();\n        };\n\n        this.eventProvider?.removeAllListeners();\n        this.eventProvider = eventProvider;\n\n        console.log('EventProvider launched on network: ', this.networkName);\n        emitter.emit(CONNECTION_CHANGED, {\n          type: 'event',\n          address: '',\n          networkName: this.networkName,\n        } as ConnectResult);\n      }\n      this._setupEvents();\n    } catch (e) {\n      console.log(e);\n      if (this.eventProvider) {\n        this.eventProvider = null;\n      }\n    }\n  };\n\n  /******************** Contracts *********************/\n\n  _getChainAddresses(): ChainAddresses | null {\n    switch (this.chainId) {\n      case 1:\n        return addresses[1];\n      case 4:\n        return addresses[4];\n      default:\n        return null;\n    }\n  }\n\n  _setupEventContracts(\n    provider: ethers.providers.InfuraWebSocketProvider\n  ): void {\n    const chainAddresses = this._getChainAddresses();\n\n    if (chainAddresses) {\n      this.presaleContractRO = new ethers.Contract(\n        chainAddresses.presale,\n        CrowdsaleAbi,\n        provider\n      );\n    }\n  }\n\n  _setupContracts(provider: ethers.providers.Web3Provider): boolean {\n    const chainAddresses = this._getChainAddresses();\n    if (chainAddresses) {\n      const signer = provider?.getSigner();\n      this.presaleContract = new ethers.Contract(\n        chainAddresses.presale,\n        CrowdsaleAbi,\n        signer\n      );\n      this.tokenContract = new ethers.Contract(\n        chainAddresses.token,\n        TokenAbi,\n        signer\n      );\n      return true;\n    }\n    return false;\n  }\n\n  _getPresaleState = async (payloadContent: PayloadContent | undefined) => {\n    try {\n      const states:\n        | {\n            ethRaised: ethers.BigNumber;\n            timeOpen: ethers.BigNumber;\n            timeClose: ethers.BigNumber;\n            timeNow: ethers.BigNumber;\n            userEthAmount: ethers.BigNumber;\n            userEthInvested: ethers.BigNumber;\n            userTokenAmount: ethers.BigNumber;\n            userTokenLocked: ethers.BigNumber;\n          }\n        | undefined = await this.presaleContractRO?.getStates(\n        this.address === '' ? Store.nullAddress : this.address\n      );\n\n      if (states) {\n        const hasClosed = states.timeNow.gt(states.timeClose);\n        const isOpen = !hasClosed && states.timeNow.gte(states.timeOpen);\n        emitter.emit(PRESALE_STATE, {\n          state: {\n            ethRaised: this.fromWei(states.ethRaised),\n            hasClosed: hasClosed,\n            isOpen: isOpen,\n            timeToNextEvent: hasClosed\n              ? 0\n              : isOpen\n              ? states.timeClose.sub(states.timeNow).toNumber() + 20\n              : states.timeOpen.sub(states.timeNow).toNumber() + 20,\n            ethUser: this.fromWei(states.userEthAmount),\n            ethInvested: this.fromWei(states.userEthInvested),\n            tokenUser: this.fromWei(states.userTokenAmount),\n            tokenLocked: this.fromWei(states.userTokenLocked),\n          },\n        });\n      }\n    } catch (e) {\n      emitter.emit(PRESALE_STATE, { error: e.message });\n    }\n  };\n\n  _getPresaleContractAddress() {\n    return this.presaleContractRO?.address;\n  }\n\n  _getMintContractAddress() {\n    return this.mintContractRO?.address;\n  }\n\n  _getTokenContractData = async (payloadContent: PayloadContent) => {\n    async.parallel(\n      [\n        (callbackInner) => {\n          this._getTokenAmount(payloadContent, callbackInner);\n        },\n      ],\n      (err, data: unknown) => {\n        if (err) {\n          console.log(err);\n          emitter.emit(ERC20_TOKEN_CONTRACT, { error: err.toString() });\n        } else {\n          const asset: TokenContractResult = { tokenAmount: 0 };\n          const numberArray = data as Array<number>;\n          asset.tokenAmount = numberArray[0];\n          emitter.emit(ERC20_TOKEN_CONTRACT, asset);\n        }\n      }\n    );\n  };\n\n  // Buy tokens for {amount} ETH\n  _doPresale = async (payloadContent: PayloadContent) => {\n    try {\n      const { amount } = payloadContent;\n      const investAmount = { value: this.toWei(amount || 0) };\n\n      const tx:\n        | ethers.ContractTransaction\n        | undefined = await this.presaleContract?.buyTokens(\n        this.address,\n        investAmount\n      );\n      emitter.emit(TX_HASH, tx?.hash);\n\n      await tx?.wait();\n      emitter.emit(PRESALE_BUY, {});\n    } catch (e) {\n      emitter.emit(PRESALE_BUY, { error: e.message });\n    }\n  };\n\n  // Buy tokens for {amount} ETH\n  _doPresaleClaim = async (payloadContent: PayloadContent) => {\n    try {\n      const tx:\n        | ethers.ContractTransaction\n        | undefined = await this.presaleContract?.claimTokens();\n      emitter.emit(TX_HASH, tx?.hash);\n\n      await tx?.wait();\n      emitter.emit(PRESALE_CLAIM, {});\n    } catch (e) {\n      emitter.emit(PRESALE_CLAIM, { error: e.message });\n    }\n  };\n\n  _getTokenAmount = async (payloadContent: PayloadContent, callback: cbf) => {\n    try {\n      const result = ethers.BigNumber.from(0);\n      //const result = await this.tokenContract.balanceOf(this.address);\n      callback(null, this.fromWei(result));\n    } catch (e) {\n      console.log(e);\n      return callback(e);\n    }\n  };\n\n  fromWei(n: ethers.BigNumber, decimals = 18) {\n    return parseFloat(ethers.utils.formatUnits(n, decimals));\n  }\n\n  toWei(n: number, decimals = 18) {\n    const parsed = typeof n === 'number' ? n.toFixed(decimals) : n;\n    return ethers.utils.parseUnits(parsed, decimals);\n  }\n}\n\nconst StoreClasses = {\n  store: new Store(),\n  emitter: emitter,\n  dispatcher: dispatcher,\n};\n\nexport class StoreContainer extends React.Component<unknown> {\n  componentDidMount(): void {\n    StoreClasses.store.autoconnect();\n  }\n\n  componentWillUnmount(): void {\n    StoreClasses.store.close();\n  }\n\n  render(): React.ReactNode {\n    return <>{this.props.children}</>;\n  }\n}\n\nexport { StoreClasses };\n","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See the file LICENSES/README.md for more information.\n */\nimport './header.css';\n\nimport React, { Component, ReactNode } from 'react';\nimport { Form, Image, Navbar } from 'react-bootstrap';\n\nimport logo from '../../assets/wolves_sft_logo.svg';\nimport { CONNECTION_CHANGED } from '../../stores/constants';\nimport { ConnectResult, StoreClasses } from '../../stores/store';\n\ninterface CSTATE {\n  address: string;\n  networkName: string;\n}\n\nclass Header extends Component<unknown, CSTATE> {\n  store = StoreClasses.store;\n  emitter = StoreClasses.emitter;\n\n  constructor(props: unknown) {\n    super(props);\n    this.state = { address: '', networkName: '' };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onConnectionChanged = this.onConnectionChanged.bind(this);\n  }\n\n  componentDidMount(): void {\n    this.emitter.on(CONNECTION_CHANGED, this.onConnectionChanged);\n  }\n\n  componentWillUnmount(): void {\n    this.emitter.off(CONNECTION_CHANGED, this.onConnectionChanged);\n  }\n\n  onConnectionChanged(params: ConnectResult): void {\n    if (params.type === 'prod') this.setState(params);\n  }\n\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n    if (this.store.isConnected()) {\n      this.store.disconnect(true);\n    } else {\n      this.store.connect();\n    }\n    event.preventDefault();\n  }\n\n  _shortAddress(): string {\n    const { address, networkName } = this.state;\n    return address !== ''\n      ? address.substring(0, 6) +\n          '...' +\n          address.substring(address.length - 4, address.length) +\n          '(' +\n          networkName +\n          ')'\n      : 'CONNECT WALLET';\n  }\n\n  render(): ReactNode {\n    const shortAddress = this._shortAddress();\n    return (\n      <Navbar bg=\"wolf\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Brand className=\"navbar-brand mr-auto\" href=\"#home\">\n          <Image src={logo} width=\"300\" className=\"logo\" />\n        </Navbar.Brand>\n        <Navbar.Collapse id=\"basic-navbar-nav\"></Navbar.Collapse>\n        <Form className=\"dp-conn-form\" onSubmit={this.handleSubmit} inline>\n          <input className=\"dp-conn-btn\" type=\"submit\" value={shortAddress} />\n        </Form>\n      </Navbar>\n    );\n  }\n\n  scrollSection(section: string): void {\n    section = '';\n  }\n}\n\nexport { Header };\n","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See the file LICENSES/README.md for more information.\n */\nimport './mint.css';\n\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { TFunction, withTranslation } from 'react-i18next';\n\nimport {\n  CONNECTION_CHANGED,\n  PRESALE_BUY,\n  PRESALE_CLAIM,\n  PRESALE_STATE,\n} from '../../stores/constants';\nimport {\n  ConnectResult,\n  MintResult,\n  StatusResult,\n  StoreClasses,\n} from '../../stores/store';\n\ntype MINTPROPS = {\n  t: TFunction;\n};\n\ntype MINTSTATE = {\n  connected: boolean;\n  waiting: boolean;\n  inputValid: boolean;\n  ethRaised: number;\n  hasClosed: boolean;\n  isOpen: boolean;\n  timeToNextEvent: number;\n  ethUser: number;\n  ethInvested: number;\n  tokenUser: number;\n  tokenLocked: number;\n};\n\nconst INITIALSTATE: MINTSTATE = {\n  connected: false,\n  waiting: false,\n  inputValid: false,\n  ethRaised: 0,\n  hasClosed: true,\n  isOpen: false,\n  timeToNextEvent: 0,\n  ethUser: 0,\n  ethInvested: 0,\n  tokenUser: 0,\n  tokenLocked: 0,\n};\n\nconst INITIALCONNSTATE = {\n  connected: false,\n  ethUser: 0,\n  ethInvested: 0,\n  tokenUser: 0,\n  tokenLocked: 0,\n};\n\nconst FAILURESTATE = {\n  ethRaised: 0,\n  hasClosed: true,\n  isOpen: false,\n  timeToNextEvent: 0,\n  ethUser: 0,\n  ethInvested: 0,\n  tokenUser: 0,\n  tokenLocked: 0,\n};\n\nclass Mint extends Component<MINTPROPS, MINTSTATE> {\n  emitter = StoreClasses.emitter;\n  dispatcher = StoreClasses.dispatcher;\n  static readonly defaultEthValue = '0 ETH';\n\n  textRef: React.RefObject<HTMLSpanElement> = React.createRef();\n  clockRef: React.RefObject<HTMLDivElement> = React.createRef();\n  inputRef: React.RefObject<HTMLInputElement> = createRef();\n  buttonRef: HTMLInputElement | null = null;\n  timeoutHandle: NodeJS.Timeout | undefined = undefined;\n  tickerHandle: number | undefined = undefined;\n\n  constructor(props: MINTPROPS) {\n    super(props);\n    this.state = { ...INITIALSTATE };\n\n    this.handleOnBlur = this.handleOnBlur.bind(this);\n    this.handleOnFocus = this.handleOnFocus.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClaim = this.handleClaim.bind(this);\n    this.onConnectionChanged = this.onConnectionChanged.bind(this);\n    this.onMintState = this.onMintState.bind(this);\n    this.onMintBuy = this.onMintBuy.bind(this);\n    this.onTimeout = this.onTimeout.bind(this);\n    this.handleTickEvent = this.handleTickEvent.bind(this);\n    this.onButtonRefChanged = this.onButtonRefChanged.bind(this);\n  }\n\n  componentDidMount(): void {\n    this.emitter.on(CONNECTION_CHANGED, this.onConnectionChanged);\n    this.emitter.on(PRESALE_STATE, this.onMintState);\n    this.emitter.on(PRESALE_BUY, this.onMintBuy);\n    if (StoreClasses.store.isEventConnected())\n      this.dispatcher.dispatch({ type: PRESALE_STATE, content: {} });\n    window.addEventListener('PRESALE_TICKER', this.handleTickEvent);\n  }\n\n  componentWillUnmount(): void {\n    this.emitter.off(PRESALE_BUY, this.onMintBuy);\n    this.emitter.off(PRESALE_STATE, this.onMintState);\n    this.emitter.off(CONNECTION_CHANGED, this.onConnectionChanged);\n    window.removeEventListener('PRESALE_TICKER', this.handleTickEvent);\n    if (this.tickerHandle !== undefined) clearInterval(this.tickerHandle);\n  }\n\n  onConnectionChanged(params: ConnectResult): void {\n    if (params.type === 'event') {\n      this.dispatcher.dispatch({ type: PRESALE_STATE, content: {} });\n    } else if (params.address === '') {\n      this.setState(INITIALCONNSTATE);\n    } else {\n      this.setState({ connected: true });\n      this.dispatcher.dispatch({ type: PRESALE_STATE, content: {} });\n    }\n  }\n\n  onMintState(params: MintResult): void {\n    if (params['error'] === undefined) {\n      this.setState(params.state);\n      this._manageTimers(\n        params.state.isOpen,\n        params.state.hasClosed,\n        params.state.timeToNextEvent\n      );\n    } else {\n      this.setState(FAILURESTATE);\n      this._manageTimers(false, true, 0);\n    }\n  }\n\n  onTimeout(): void {\n    this.dispatcher.dispatch({ type: PRESALE_STATE, content: {} });\n  }\n\n  onTicker(tickerEnd: number): void {\n    const secondsLeft = tickerEnd - Date.now() + 500;\n\n    if (secondsLeft < 0) return;\n\n    const msecInMinute = 1000 * 60;\n    const msecInHour = msecInMinute * 60;\n    const msecInDay = msecInHour * 24;\n\n    const days = Math.floor(secondsLeft / msecInDay)\n      .toString()\n      .padStart(2, '0');\n    const hours = Math.floor((secondsLeft % msecInDay) / msecInHour)\n      .toString()\n      .padStart(2, '0');\n    const minutes = Math.floor((secondsLeft % msecInHour) / msecInMinute)\n      .toString()\n      .padStart(2, '0');\n    const seconds = Math.floor((secondsLeft % msecInMinute) / 1000)\n      .toString()\n      .padStart(2, '0');\n\n    const result = days + 'd:' + hours + 'h:' + minutes + 'm:' + seconds + 's';\n    window.dispatchEvent(\n      new CustomEvent('PRESALE_TICKER', { detail: { time: result } })\n    );\n  }\n\n  onMintBuy(params: StatusResult): void {\n    this.setState({ waiting: false });\n    if (params['error'] === undefined && this.inputRef.current) {\n      this.inputRef.current.value = Mint.defaultEthValue;\n      this.setState({ inputValid: false });\n    }\n  }\n\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n    this.setState({ waiting: true });\n    if (this.inputRef.current) {\n      const amount = parseFloat(this.inputRef.current.value.replace(',', '.'));\n      this.dispatcher.dispatch({\n        type: PRESALE_BUY,\n        content: { amount: amount },\n      });\n    }\n    event.preventDefault();\n  }\n\n  handleOnChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    event.target.value = event.target.value\n      .replace(/[^0-9,.]/gi, '')\n      .replace('.', ',');\n    this.setState({\n      inputValid: parseFloat(event.target.value.replace(',', '.')) > 0,\n    });\n  }\n\n  handleOnFocus(event: React.FocusEvent<HTMLInputElement>): void {\n    if (event.target.value.indexOf('ETH') >= 0) event.target.value = '';\n  }\n\n  handleOnBlur(event: React.FocusEvent<HTMLInputElement>): void {\n    if (event.target.value.trim() === '')\n      event.target.value = Mint.defaultEthValue;\n  }\n\n  handleClaim(event: React.MouseEvent): void {\n    this.dispatcher.dispatch({\n      type: PRESALE_CLAIM,\n      content: { amount: 0 },\n    });\n  }\n\n  handleTickEvent(event: Event): void {\n    const detail = (event as CustomEvent).detail;\n    if (detail.time && this.clockRef.current)\n      this.clockRef.current.innerHTML = detail.time;\n    else if (detail.text && this.textRef.current) {\n      this.textRef.current.innerHTML = detail.text;\n      if (this.clockRef.current)\n        this.clockRef.current.style.color = detail.isOpen ? 'lime' : 'red';\n    }\n  }\n\n  _manageTimers(\n    isOpen: boolean,\n    hasClosed: boolean,\n    timeToNextEvent: number\n  ): void {\n    if (this.timeoutHandle) {\n      clearTimeout(this.timeoutHandle);\n      this.timeoutHandle = undefined;\n    }\n    if (timeToNextEvent)\n      this.timeoutHandle = setTimeout(this.onTimeout, timeToNextEvent * 1000);\n    const { t } = this.props;\n    window.dispatchEvent(\n      new CustomEvent('PRESALE_TICKER', {\n        detail: {\n          text: isOpen\n            ? t('mint.notOpen')\n            : hasClosed\n            ? t('mint.closed')\n            : t('mint.live'),\n          isOpen: isOpen,\n        },\n      })\n    );\n\n    if (this.tickerHandle !== undefined) {\n      clearInterval(this.tickerHandle);\n      this.tickerHandle = undefined;\n    }\n    if (timeToNextEvent) {\n      this.tickerHandle = setInterval(this.onTicker, 1000, [\n        Date.now() + timeToNextEvent * 1000,\n      ]);\n    } else\n      window.dispatchEvent(\n        new CustomEvent('PRESALE_TICKER', { detail: { time: '-- : --' } })\n      );\n  }\n\n  _getMintContractAddress(): string {\n    return StoreClasses.store._getMintContractAddress() || '';\n  }\n\n  onButtonRefChanged(ref: HTMLInputElement): void {\n    this.buttonRef = ref;\n    this.forceUpdate();\n  }\n\n  render(): ReactNode {\n    const disabled =\n      !this.state.connected || this.state.waiting\n\n    return (\n      <div className=\"tk-aktiv-grotesk-condensed mint-main mint-column\">\n        <div className=\"mint-text-container mint-column\">\n          <div className=\"mint-welcome mint-text mint-text-top mint-small-top\">\n            WELCOME TO THE WOLFPACK\n          </div>\n          <div className=\"mint-info mint-text mint-text-top mint-small\">\n            IN ORDER TO STAKE WITH WOLVES ON THE WOLD TRADEFLOOR YOU WILL NEED\n            TO PURCHASE YOUR SFT CHARACTER CRYPTO LICENSE\n          </div>\n        </div>\n        <div className=\"mint-separator\">\n          <hr />\n        </div>\n        <div className=\"image-holder\">TODO: SFT image goes here</div>\n        <div className=\"mint-text-container mint-column\">\n          <div className=\"sft-name mint-text mint-text mint-small\">\n            TODO: SFT name goes here. MAX FANG\n          </div>\n          <div className=\"sft-moto mint-text mint-text-top mint-small\">\n            TODO: SFT motto goes here. MOTTO: Buy when there is blood on the\n            street\n          </div>\n          <div className=\"sft-description mint-text mint-text-top mint-small\">\n            TODO: SFT description goes here. He has 4 screen 2 phones but needs\n            more. This trader has big deals on the line and needs to track them\n            second by second or otherwise he's out the door. Fueled by caffine\n            he's 2 deals away from making it, 1 deal away from disaster. But he\n            always makes it.\n          </div>\n          <div className=\"sft-into mint-text mint-text-top mint-small\">\n            This is a staker card and allows to stake WOLF on the tradefloor and\n            also Raid. You can sell this character license at any point whether\n            on our platform or on OpenSea.\n          </div>\n          <div className=\"sft-rarity mint-text mint-text mint-small\">\n            TODO: SFT rarity goes here. RARITY: 1/120\n          </div>\n          <div className=\"sft-raidability mint-text mint-text mint-small\">\n            TODO: SFT raidability goes here. RAIDABILITY: 50% (upgraded)\n          </div>\n          <div className=\"sft-profit-sharing mint-text mint-text mint-small\">\n            TODO: SFT profit sharing goes here. PROFIT SHARING: 50%\n          </div>\n        </div>\n        <form className=\"dp-pre-form\" onSubmit={this.handleSubmit}>\n          <input\n            className=\"dp-pre-btn\"\n            type=\"submit\"\n            value=\"BUY MAX FANG\"\n            disabled={disabled}\n            ref={this.onButtonRefChanged}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(Mint);\n// for testing export without hook\nexport { Mint };\n","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See LICENSE.txt for more information.\n */\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\n\nimport { Footer } from './components/footer';\nimport { Header } from './components/header';\nimport Mint from './components/mint';\nimport { StoreContainer } from './stores/store';\n\nclass App extends React.Component {\n  render(): JSX.Element {\n    return (\n      <div className=\"App\">\n        <StoreContainer>\n          <Header />\n          <Mint />\n          <Footer />\n        </StoreContainer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See LICENSE.txt for more information.\n */\n\nimport { ReportHandler } from 'web-vitals/src/types';\n\nconst reportWebVitals: (onPerfEntry: ReportHandler) => void = (\n  onPerfEntry: ReportHandler\n) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n * Copyright (C) 2020 The Wolfpack\n * This file is part of wolves.finance - https://github.com/wolvesofwallstreet/wolves.finance\n *\n * SPDX-License-Identifier: Apache-2.0\n * See LICENSE.txt for more information.\n */\n\nimport './i18n';\nimport './index.css';\nimport 'assets/fonts/wp_fonts.css';\nimport 'assets/fonts/font_variants.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}